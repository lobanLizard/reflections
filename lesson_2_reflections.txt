What happens when you initialize a repository? Why do you need to do it?

--- it created .git folder.  No commit has created.  I guess I am imagining something like creating an empty box in which files are stored in the future.

How is the staging area different from the working directory and the repository? What value do you think it offers?

--- I think the staging area makes sure what files should be committed.  This will make sure you don't put unnecessary files or forget to put necessary files.

How can you use the staging area to make sure you have one commit per logical change?

--- Staging area can be considered as a temporary area.  I can use git diff --staged or git diff commands to compare the latest commit or current directory to make sure the staging area file is the one to commit next time.  

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
--- it helps especially if I am sharing my code to others.  If there is a bug it is easier to find.

How do the diagrams help you visualize the branch structure?
--- I can see where the braches diverged and also if there is an orphan link exists.  

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
--- merge one file to another and from now on it becomes one branch.  I can still access to the files in old branch.  

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
--- if there are conflict, it might not be really easy to merge by hand.  Also, not sure if I can totally trust Git for automatic merging without experimenting more.

